# Makefile.in generated by automake 1.11.6 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = vcs/subversion
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(kde_moduledir)" "$(DESTDIR)$(kdeddir)" \
	"$(DESTDIR)$(protocoldir)" "$(DESTDIR)$(servicedir)"
LTLIBRARIES = $(kde_module_LTLIBRARIES)
am__DEPENDENCIES_1 =
kded_kdevsvnd_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kded_kdevsvnd_la_OBJECTS = commitdlg.lo kdevsvnd.lo \
	kdevsvnd_widgets.lo
#>- kded_kdevsvnd_la_OBJECTS = $(am_kded_kdevsvnd_la_OBJECTS)
#>+ 5
kded_kdevsvnd_la_final_OBJECTS = kded_kdevsvnd_la.all_cpp.lo 
kded_kdevsvnd_la_nofinal_OBJECTS = commitdlg.lo kdevsvnd.lo \
	kdevsvnd_widgets.lo kdevsvnd_skel.lo commitdlgbase.lo svnssltrustpromptbase.lo
@KDE_USE_FINAL_FALSE@kded_kdevsvnd_la_OBJECTS = $(kded_kdevsvnd_la_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@kded_kdevsvnd_la_OBJECTS = $(kded_kdevsvnd_la_final_OBJECTS)
#>- kded_kdevsvnd_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(kded_kdevsvnd_la_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
kded_kdevsvnd_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(kded_kdevsvnd_la_LDFLAGS) $(LDFLAGS) -o $@
kio_kdevsvn_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kio_kdevsvn_la_OBJECTS = svn_kio.lo
#>- kio_kdevsvn_la_OBJECTS = $(am_kio_kdevsvn_la_OBJECTS)
#>+ 1
kio_kdevsvn_la_OBJECTS = svn_kio.lo
#>- kio_kdevsvn_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(kio_kdevsvn_la_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
kio_kdevsvn_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(kio_kdevsvn_la_LDFLAGS) $(LDFLAGS) -o $@
libkdevsubversion_la_DEPENDENCIES =  \
	$(top_builddir)/lib/libkdevelop.la \
	$(top_builddir)/lib/interfaces/extensions/libkdevextensions.la
am_libkdevsubversion_la_OBJECTS = subversion_core.lo \
	subversion_fileinfo.lo subversion_part.lo subversion_widget.lo \
	svn_blamewidget.lo svn_copywidget.lo \
	svn_fileselectdlg_commit.lo svn_logviewwidget.lo \
	svn_mergewidget.lo svn_switchwidget.lo
#>- libkdevsubversion_la_OBJECTS = $(am_libkdevsubversion_la_OBJECTS)
#>+ 8
libkdevsubversion_la_final_OBJECTS = libkdevsubversion_la.all_cpp.lo 
libkdevsubversion_la_nofinal_OBJECTS = subversion_core.lo \
	subversion_fileinfo.lo subversion_part.lo subversion_widget.lo \
	svn_blamewidget.lo svn_copywidget.lo \
	svn_fileselectdlg_commit.lo svn_logviewwidget.lo \
	svn_mergewidget.lo svn_switchwidget.lo subversion_fileinfo_skel.lo subversiondiff.lo subversionprojectwidget.lo svn_co.lo svn_commitdlgbase.lo svn_copydlgwidget.lo svn_logviewoptiondlgbase.lo svn_mergeoptiondlgbase.lo svn_switchdlgbase.lo
@KDE_USE_FINAL_FALSE@libkdevsubversion_la_OBJECTS = $(libkdevsubversion_la_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@libkdevsubversion_la_OBJECTS = $(libkdevsubversion_la_final_OBJECTS)
#>- libkdevsubversion_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(libkdevsubversion_la_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
libkdevsubversion_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(libkdevsubversion_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(kded_kdevsvnd_la_SOURCES) $(kio_kdevsvn_la_SOURCES) \
	$(libkdevsubversion_la_SOURCES)
DIST_SOURCES = $(kded_kdevsvnd_la_SOURCES) $(kio_kdevsvn_la_SOURCES) \
	$(libkdevsubversion_la_SOURCES)
#>- RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
#>- 	html-recursive info-recursive install-data-recursive \
#>- 	install-dvi-recursive install-exec-recursive \
#>- 	install-html-recursive install-info-recursive \
#>- 	install-pdf-recursive install-ps-recursive install-recursive \
#>- 	installcheck-recursive installdirs-recursive pdf-recursive \
#>- 	ps-recursive uninstall-recursive
#>+ 7
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive nmcheck-recursive bcheck-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(kded_DATA) $(protocol_DATA) $(service_DATA)
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DB3INCLUDES = @DB3INCLUDES@
DB3LDFLAGS = @DB3LDFLAGS@
DB3LIB = @DB3LIB@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOT_FOUND = @DOT_FOUND@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
GZIP_COMMAND = @GZIP_COMMAND@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SVN_CPPFLAGS = @SVN_CPPFLAGS@
SVN_INCLUDE = @SVN_INCLUDE@
SVN_LIB = @SVN_LIB@
TAR = @TAR@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
gmake_prog = @gmake_prog@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
kdelibs_doxydir = @kdelibs_doxydir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
tar = @tar@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
INCLUDES = -I$(top_srcdir)/lib/interfaces -I$(top_srcdir)/lib/util -I$(top_srcdir)/lib/interfaces/extensions $(SVN_INCLUDE) $(all_includes)
#>- METASOURCES = AUTO
kde_module_LTLIBRARIES = libkdevsubversion.la kio_kdevsvn.la kded_kdevsvnd.la
#>- libkdevsubversion_la_SOURCES = subversion_core.cpp subversion_fileinfo.cpp \
#>- 	subversion_fileinfo.skel subversion_part.cpp subversion_widget.cpp subversiondiff.ui \
#>- 	subversionprojectwidget.ui svn_blamewidget.cpp svn_co.ui svn_commitdlgbase.ui svn_copydlgwidget.ui \
#>- 	svn_copywidget.cpp svn_fileselectdlg_commit.cpp svn_logviewoptiondlgbase.ui \
#>- 	svn_logviewwidget.cpp svn_mergeoptiondlgbase.ui svn_mergewidget.cpp svn_switchdlgbase.ui \
#>- 	svn_switchwidget.cpp
#>+ 6
libkdevsubversion_la_SOURCES=subversion_core.cpp subversion_fileinfo.cpp \
	 subversion_part.cpp subversion_widget.cpp  \
	 svn_blamewidget.cpp    \
	svn_copywidget.cpp svn_fileselectdlg_commit.cpp  \
	svn_logviewwidget.cpp  svn_mergewidget.cpp  \
	svn_switchwidget.cpp subversion_fileinfo_skel.cpp subversiondiff.cpp subversionprojectwidget.cpp svn_co.cpp svn_commitdlgbase.cpp svn_copydlgwidget.cpp svn_logviewoptiondlgbase.cpp svn_mergeoptiondlgbase.cpp svn_switchdlgbase.cpp

libkdevsubversion_la_LIBADD = $(top_builddir)/lib/libkdevelop.la $(top_builddir)/lib/interfaces/extensions/libkdevextensions.la
libkdevsubversion_la_LDFLAGS = $(all_libraries) $(KDE_PLUGIN)
kio_kdevsvn_la_SOURCES = svn_kio.cpp
kio_kdevsvn_la_LIBADD = $(LIB_KIO)
kio_kdevsvn_la_LDFLAGS = -module $(all_libraries) $(KDE_PLUGIN) $(SVN_LIB)
#>- kded_kdevsvnd_la_SOURCES = commitdlg.cpp commitdlgbase.ui kdevsvnd.cpp \
#>- 	kdevsvnd.skel kdevsvnd_widgets.cpp svnssltrustpromptbase.ui
#>+ 2
kded_kdevsvnd_la_SOURCES=commitdlg.cpp  kdevsvnd.cpp \
	 kdevsvnd_widgets.cpp  kdevsvnd_skel.cpp commitdlgbase.cpp svnssltrustpromptbase.cpp

kded_kdevsvnd_la_LIBADD = $(LIB_KIO) -lkdeinit_kded
kded_kdevsvnd_la_LDFLAGS = -module $(all_libraries) $(KDE_PLUGIN)
kdeddir = $(kde_servicesdir)/kded
kded_DATA = kdevsvnd.desktop
servicedir = $(kde_servicesdir)
service_DATA = kdevsubversion.desktop
protocoldir = $(kde_servicesdir)
protocol_DATA = kdevsvn+file.protocol kdevsvn+http.protocol kdevsvn+https.protocol kdevsvn+ssh.protocol kdevsvn+svn.protocol
SUBDIRS = integrator
noinst_HEADERS = commitdlg.h kdevsvnd.h svn_blamewidget.h svn_copywidget.h \
	svn_fileselectdlg_commit.h svn_logviewwidget.h svn_mergewidget.h svn_switchwidget.h

#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
#>- 	        && { if test -f $@; then exit 0; else break; fi; }; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu vcs/subversion/Makefile'; \
#>- 	$(am__cd) $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu vcs/subversion/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu vcs/subversion/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu vcs/subversion/Makefile
	cd $(top_srcdir) && perl admin/am_edit vcs/subversion/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-kde_moduleLTLIBRARIES: $(kde_module_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(kde_module_LTLIBRARIES)'; test -n "$(kde_moduledir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(kde_moduledir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(kde_moduledir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(kde_moduledir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(kde_moduledir)"; \
	}

uninstall-kde_moduleLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(kde_module_LTLIBRARIES)'; test -n "$(kde_moduledir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(kde_moduledir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(kde_moduledir)/$$f"; \
	done

clean-kde_moduleLTLIBRARIES:
	-test -z "$(kde_module_LTLIBRARIES)" || rm -f $(kde_module_LTLIBRARIES)
	@list='$(kde_module_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
kded_kdevsvnd.la: $(kded_kdevsvnd_la_OBJECTS) $(kded_kdevsvnd_la_DEPENDENCIES) $(EXTRA_kded_kdevsvnd_la_DEPENDENCIES) 
	$(kded_kdevsvnd_la_LINK) -rpath $(kde_moduledir) $(kded_kdevsvnd_la_OBJECTS) $(kded_kdevsvnd_la_LIBADD) $(LIBS)
kio_kdevsvn.la: $(kio_kdevsvn_la_OBJECTS) $(kio_kdevsvn_la_DEPENDENCIES) $(EXTRA_kio_kdevsvn_la_DEPENDENCIES) 
	$(kio_kdevsvn_la_LINK) -rpath $(kde_moduledir) $(kio_kdevsvn_la_OBJECTS) $(kio_kdevsvn_la_LIBADD) $(LIBS)
libkdevsubversion.la: $(libkdevsubversion_la_OBJECTS) $(libkdevsubversion_la_DEPENDENCIES) $(EXTRA_libkdevsubversion_la_DEPENDENCIES) 
	$(libkdevsubversion_la_LINK) -rpath $(kde_moduledir) $(libkdevsubversion_la_OBJECTS) $(libkdevsubversion_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/commitdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kdevsvnd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kdevsvnd_widgets.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/subversion_core.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/subversion_fileinfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/subversion_part.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/subversion_widget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svn_blamewidget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svn_copywidget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svn_fileselectdlg_commit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svn_kio.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svn_logviewwidget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svn_mergewidget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svn_switchwidget.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-kdedDATA: $(kded_DATA)
	@$(NORMAL_INSTALL)
	@list='$(kded_DATA)'; test -n "$(kdeddir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(kdeddir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(kdeddir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(kdeddir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(kdeddir)" || exit $$?; \
	done

uninstall-kdedDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kded_DATA)'; test -n "$(kdeddir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(kdeddir)'; $(am__uninstall_files_from_dir)
install-protocolDATA: $(protocol_DATA)
	@$(NORMAL_INSTALL)
	@list='$(protocol_DATA)'; test -n "$(protocoldir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(protocoldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(protocoldir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(protocoldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(protocoldir)" || exit $$?; \
	done

uninstall-protocolDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(protocol_DATA)'; test -n "$(protocoldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(protocoldir)'; $(am__uninstall_files_from_dir)
install-serviceDATA: $(service_DATA)
	@$(NORMAL_INSTALL)
	@list='$(service_DATA)'; test -n "$(servicedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(servicedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(servicedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(servicedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(servicedir)" || exit $$?; \
	done

uninstall-serviceDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(service_DATA)'; test -n "$(servicedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(servicedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(kde_moduledir)" "$(DESTDIR)$(kdeddir)" "$(DESTDIR)$(protocoldir)" "$(DESTDIR)$(servicedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-generic clean-kde_moduleLTLIBRARIES clean-libtool \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-idl clean-ui clean-bcheck clean-final  clean-generic clean-kde_moduleLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

#>- install-data-am: install-kde_moduleLTLIBRARIES install-kdedDATA \
#>- 	install-protocolDATA install-serviceDATA
#>+ 2
install-data-am:   install-kdedDATA \
	install-protocolDATA install-serviceDATA

install-dvi: install-dvi-recursive

install-dvi-am:

#>- install-exec-am:
#>+ 1
install-exec-am:  install-kde_moduleLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-kde_moduleLTLIBRARIES uninstall-kdedDATA \
	uninstall-protocolDATA uninstall-serviceDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \
	install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-generic \
	clean-kde_moduleLTLIBRARIES clean-libtool ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-kde_moduleLTLIBRARIES install-kdedDATA \
	install-man install-pdf install-pdf-am install-protocolDATA \
	install-ps install-ps-am install-serviceDATA install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-kde_moduleLTLIBRARIES uninstall-kdedDATA \
	uninstall-protocolDATA uninstall-serviceDATA


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 5
kdevsvnd.kidl: $(srcdir)/kdevsvnd.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/kdevsvnd.h > kdevsvnd.kidl || ( rm -f kdevsvnd.kidl ; false )
kdevsvnd_skel.cpp: kdevsvnd.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub kdevsvnd.kidl

#>+ 3
svn_mergewidget.moc: $(srcdir)/svn_mergewidget.h
	$(MOC) $(srcdir)/svn_mergewidget.h -o svn_mergewidget.moc

#>+ 2
mocs: svn_mergewidget.moc

#>+ 3
subversion_part.moc: $(srcdir)/subversion_part.h
	$(MOC) $(srcdir)/subversion_part.h -o subversion_part.moc

#>+ 2
mocs: subversion_part.moc

#>+ 3
subversion_widget.moc: $(srcdir)/subversion_widget.h
	$(MOC) $(srcdir)/subversion_widget.h -o subversion_widget.moc

#>+ 2
mocs: subversion_widget.moc

#>+ 3
commitdlg.moc: $(srcdir)/commitdlg.h
	$(MOC) $(srcdir)/commitdlg.h -o commitdlg.moc

#>+ 2
mocs: commitdlg.moc

#>+ 3
svn_fileselectdlg_commit.moc: $(srcdir)/svn_fileselectdlg_commit.h
	$(MOC) $(srcdir)/svn_fileselectdlg_commit.h -o svn_fileselectdlg_commit.moc

#>+ 2
mocs: svn_fileselectdlg_commit.moc

#>+ 3
subversion_fileinfo.moc: $(srcdir)/subversion_fileinfo.h
	$(MOC) $(srcdir)/subversion_fileinfo.h -o subversion_fileinfo.moc

#>+ 2
mocs: subversion_fileinfo.moc

#>+ 3
svn_switchwidget.moc: $(srcdir)/svn_switchwidget.h
	$(MOC) $(srcdir)/svn_switchwidget.h -o svn_switchwidget.moc

#>+ 2
mocs: svn_switchwidget.moc

#>+ 3
kdevsvnd.moc: $(srcdir)/kdevsvnd.h
	$(MOC) $(srcdir)/kdevsvnd.h -o kdevsvnd.moc

#>+ 2
mocs: kdevsvnd.moc

#>+ 3
svn_copywidget.moc: $(srcdir)/svn_copywidget.h
	$(MOC) $(srcdir)/svn_copywidget.h -o svn_copywidget.moc

#>+ 2
mocs: svn_copywidget.moc

#>+ 3
svn_logviewwidget.moc: $(srcdir)/svn_logviewwidget.h
	$(MOC) $(srcdir)/svn_logviewwidget.h -o svn_logviewwidget.moc

#>+ 2
mocs: svn_logviewwidget.moc

#>+ 3
svn_blamewidget.moc: $(srcdir)/svn_blamewidget.h
	$(MOC) $(srcdir)/svn_blamewidget.h -o svn_blamewidget.moc

#>+ 2
mocs: svn_blamewidget.moc

#>+ 3
kdevsvnd_widgets.moc: $(srcdir)/kdevsvnd_widgets.h
	$(MOC) $(srcdir)/kdevsvnd_widgets.h -o kdevsvnd_widgets.moc

#>+ 2
mocs: kdevsvnd_widgets.moc

#>+ 3
subversion_core.moc: $(srcdir)/subversion_core.h
	$(MOC) $(srcdir)/subversion_core.h -o subversion_core.moc

#>+ 2
mocs: subversion_core.moc

#>+ 5
subversion_fileinfo.kidl: $(srcdir)/subversion_fileinfo.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/subversion_fileinfo.h > subversion_fileinfo.kidl || ( rm -f subversion_fileinfo.kidl ; false )
subversion_fileinfo_skel.cpp: subversion_fileinfo.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub subversion_fileinfo.kidl

#>+ 3
clean-metasources:
	-rm -f  svn_mergewidget.moc subversion_part.moc subversion_widget.moc commitdlg.moc svn_fileselectdlg_commit.moc subversion_fileinfo.moc svn_switchwidget.moc kdevsvnd.moc svn_copywidget.moc svn_logviewwidget.moc svn_blamewidget.moc kdevsvnd_widgets.moc subversion_core.moc

#>+ 2
KDE_DIST=svn_copydlgwidget.ui svn_mergeoptiondlgbase.ui kdevsvnd.desktop kdevsvn+svn.protocol subversiondiff.ui subversion_core.h kdevsvn+file.protocol Makefile.in subversionprojectwidget.ui kdevsubversion.desktop kdevsvn+http.protocol svn_logviewoptiondlgbase.ui subversion_fileinfo.h configure.in.bot svn_commitdlgbase.ui subversion_global.h svn_co.ui kdevsvnd_widgets.h svn_kio.h svnssltrustpromptbase.ui subversion_part.h kdevsvn+https.protocol commitdlgbase.ui subversion_widget.h README.dox kdevpart_subversion.rc configure.in.in svn_switchdlgbase.ui kdevsvn+ssh.protocol Makefile.am 

#>+ 5
clean-idl:
	-rm -f \
	kdevsvnd_skel.cpp kdevsvnd_skel.h kdevsvnd.kidl \
	subversion_fileinfo_skel.cpp subversion_fileinfo_skel.h subversion_fileinfo.kidl 

#>+ 13
clean-ui:
	-rm -f \
	commitdlgbase.cpp commitdlgbase.h commitdlgbase.moc \
	svnssltrustpromptbase.cpp svnssltrustpromptbase.h svnssltrustpromptbase.moc \
	subversiondiff.cpp subversiondiff.h subversiondiff.moc \
	subversionprojectwidget.cpp subversionprojectwidget.h subversionprojectwidget.moc \
	svn_co.cpp svn_co.h svn_co.moc \
	svn_commitdlgbase.cpp svn_commitdlgbase.h svn_commitdlgbase.moc \
	svn_copydlgwidget.cpp svn_copydlgwidget.h svn_copydlgwidget.moc \
	svn_logviewoptiondlgbase.cpp svn_logviewoptiondlgbase.h svn_logviewoptiondlgbase.moc \
	svn_mergeoptiondlgbase.cpp svn_mergeoptiondlgbase.h svn_mergeoptiondlgbase.moc \
	svn_switchdlgbase.cpp svn_switchdlgbase.h svn_switchdlgbase.moc 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu vcs/subversion/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu vcs/subversion/Makefile
	cd $(top_srcdir) && perl admin/am_edit vcs/subversion/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
kded_kdevsvnd_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/commitdlg.cpp $(srcdir)/kdevsvnd.cpp $(srcdir)/kdevsvnd_widgets.cpp kdevsvnd_skel.cpp commitdlgbase.cpp svnssltrustpromptbase.cpp  svnssltrustpromptbase.moc kdevsvnd.moc commitdlg.moc commitdlgbase.moc kdevsvnd_widgets.moc
	@echo 'creating kded_kdevsvnd_la.all_cpp.cpp ...'; \
	rm -f kded_kdevsvnd_la.all_cpp.files kded_kdevsvnd_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> kded_kdevsvnd_la.all_cpp.final; \
	for file in commitdlg.cpp kdevsvnd.cpp kdevsvnd_widgets.cpp kdevsvnd_skel.cpp commitdlgbase.cpp svnssltrustpromptbase.cpp ; do \
	  echo "#include \"$$file\"" >> kded_kdevsvnd_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> kded_kdevsvnd_la.all_cpp.final; \
	done; \
	cat kded_kdevsvnd_la.all_cpp.final kded_kdevsvnd_la.all_cpp.files > kded_kdevsvnd_la.all_cpp.cpp; \
	rm -f kded_kdevsvnd_la.all_cpp.final kded_kdevsvnd_la.all_cpp.files

#>+ 11
libkdevsubversion_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/subversion_core.cpp $(srcdir)/subversion_fileinfo.cpp $(srcdir)/subversion_part.cpp $(srcdir)/subversion_widget.cpp $(srcdir)/svn_blamewidget.cpp $(srcdir)/svn_copywidget.cpp $(srcdir)/svn_fileselectdlg_commit.cpp $(srcdir)/svn_logviewwidget.cpp $(srcdir)/svn_mergewidget.cpp $(srcdir)/svn_switchwidget.cpp subversion_fileinfo_skel.cpp subversiondiff.cpp subversionprojectwidget.cpp svn_co.cpp svn_commitdlgbase.cpp svn_copydlgwidget.cpp svn_logviewoptiondlgbase.cpp svn_mergeoptiondlgbase.cpp svn_switchdlgbase.cpp  svn_logviewoptiondlgbase.moc svn_mergewidget.moc subversion_part.moc subversion_widget.moc svn_mergeoptiondlgbase.moc subversionprojectwidget.moc subversiondiff.moc svn_copydlgwidget.moc svn_switchdlgbase.moc svn_commitdlgbase.moc svn_fileselectdlg_commit.moc subversion_fileinfo.moc svn_switchwidget.moc svn_copywidget.moc svn_logviewwidget.moc svn_blamewidget.moc svn_co.moc subversion_core.moc
	@echo 'creating libkdevsubversion_la.all_cpp.cpp ...'; \
	rm -f libkdevsubversion_la.all_cpp.files libkdevsubversion_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libkdevsubversion_la.all_cpp.final; \
	for file in subversion_core.cpp subversion_fileinfo.cpp subversion_part.cpp subversion_widget.cpp svn_blamewidget.cpp svn_copywidget.cpp svn_fileselectdlg_commit.cpp svn_logviewwidget.cpp svn_mergewidget.cpp svn_switchwidget.cpp subversion_fileinfo_skel.cpp subversiondiff.cpp subversionprojectwidget.cpp svn_co.cpp svn_commitdlgbase.cpp svn_copydlgwidget.cpp svn_logviewoptiondlgbase.cpp svn_mergeoptiondlgbase.cpp svn_switchdlgbase.cpp ; do \
	  echo "#include \"$$file\"" >> libkdevsubversion_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libkdevsubversion_la.all_cpp.final; \
	done; \
	cat libkdevsubversion_la.all_cpp.final libkdevsubversion_la.all_cpp.files > libkdevsubversion_la.all_cpp.cpp; \
	rm -f libkdevsubversion_la.all_cpp.final libkdevsubversion_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f kded_kdevsvnd_la.all_cpp.cpp libkdevsubversion_la.all_cpp.cpp

#>+ 3
final:
	$(MAKE) kded_kdevsvnd_la_OBJECTS="$(kded_kdevsvnd_la_final_OBJECTS)" libkdevsubversion_la_OBJECTS="$(libkdevsubversion_la_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) kded_kdevsvnd_la_OBJECTS="$(kded_kdevsvnd_la_final_OBJECTS)" libkdevsubversion_la_OBJECTS="$(libkdevsubversion_la_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) kded_kdevsvnd_la_OBJECTS="$(kded_kdevsvnd_la_nofinal_OBJECTS)" libkdevsubversion_la_OBJECTS="$(libkdevsubversion_la_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) kded_kdevsvnd_la_OBJECTS="$(kded_kdevsvnd_la_nofinal_OBJECTS)" libkdevsubversion_la_OBJECTS="$(libkdevsubversion_la_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 42
kdevsvnd.lo: kdevsvnd.moc 
kdevsvnd.o: kdevsvnd.moc 
commitdlg.lo: commitdlg.moc 
subversion_core.o: subversion_core.moc 
$(srcdir)/subversion_core.cpp: subversiondiff.h subversionprojectwidget.h svn_co.h svn_commitdlgbase.h svn_copydlgwidget.h svn_logviewoptiondlgbase.h svn_mergeoptiondlgbase.h svn_switchdlgbase.h 
svn_blamewidget.lo: svn_blamewidget.moc 
svn_mergewidget.lo: svn_mergewidget.moc 
$(srcdir)/svn_mergewidget.cpp: subversiondiff.h subversionprojectwidget.h svn_co.h svn_commitdlgbase.h svn_copydlgwidget.h svn_logviewoptiondlgbase.h svn_mergeoptiondlgbase.h svn_switchdlgbase.h 
svn_fileselectdlg_commit.lo: svn_fileselectdlg_commit.moc 
svn_logviewwidget.lo: svn_logviewwidget.moc 
subversion_core.lo: subversion_core.moc 
svn_mergewidget.o: svn_mergewidget.moc 
commitdlg.o: commitdlg.moc 
nmcheck-am: nmcheck
subversion_fileinfo.lo: subversion_fileinfo.moc 
$(srcdir)/subversion_part.cpp: subversiondiff.h subversionprojectwidget.h svn_co.h svn_commitdlgbase.h svn_copydlgwidget.h svn_logviewoptiondlgbase.h svn_mergeoptiondlgbase.h svn_switchdlgbase.h 
svn_blamewidget.o: svn_blamewidget.moc 
$(srcdir)/kdevsvnd_widgets.cpp: commitdlgbase.h svnssltrustpromptbase.h 
$(srcdir)/svn_logviewwidget.cpp: subversiondiff.h subversionprojectwidget.h svn_co.h svn_commitdlgbase.h svn_copydlgwidget.h svn_logviewoptiondlgbase.h svn_mergeoptiondlgbase.h svn_switchdlgbase.h 
kdevsvnd_widgets.lo: kdevsvnd_widgets.moc 
$(srcdir)/subversion_widget.cpp: subversiondiff.h subversionprojectwidget.h svn_co.h svn_commitdlgbase.h svn_copydlgwidget.h svn_logviewoptiondlgbase.h svn_mergeoptiondlgbase.h svn_switchdlgbase.h 
subversion_widget.lo: subversion_widget.moc 
$(srcdir)/svn_copywidget.cpp: subversiondiff.h subversionprojectwidget.h svn_co.h svn_commitdlgbase.h svn_copydlgwidget.h svn_logviewoptiondlgbase.h svn_mergeoptiondlgbase.h svn_switchdlgbase.h 
$(srcdir)/subversion_fileinfo.cpp: subversiondiff.h subversionprojectwidget.h svn_co.h svn_commitdlgbase.h svn_copydlgwidget.h svn_logviewoptiondlgbase.h svn_mergeoptiondlgbase.h svn_switchdlgbase.h 
svn_fileselectdlg_commit.o: svn_fileselectdlg_commit.moc 
$(srcdir)/svn_blamewidget.cpp: subversiondiff.h subversionprojectwidget.h svn_co.h svn_commitdlgbase.h svn_copydlgwidget.h svn_logviewoptiondlgbase.h svn_mergeoptiondlgbase.h svn_switchdlgbase.h 
subversion_fileinfo.o: subversion_fileinfo.moc 
$(srcdir)/kdevsvnd.cpp: commitdlgbase.h svnssltrustpromptbase.h 
subversion_widget.o: subversion_widget.moc 
$(srcdir)/svn_fileselectdlg_commit.cpp: subversiondiff.h subversionprojectwidget.h svn_co.h svn_commitdlgbase.h svn_copydlgwidget.h svn_logviewoptiondlgbase.h svn_mergeoptiondlgbase.h svn_switchdlgbase.h 
nmcheck: 
$(srcdir)/svn_switchwidget.cpp: subversiondiff.h subversionprojectwidget.h svn_co.h svn_commitdlgbase.h svn_copydlgwidget.h svn_logviewoptiondlgbase.h svn_mergeoptiondlgbase.h svn_switchdlgbase.h 
kdevsvnd_widgets.o: kdevsvnd_widgets.moc 
svn_copywidget.lo: svn_copywidget.moc 
subversion_part.o: subversion_part.moc 
svn_switchwidget.lo: svn_switchwidget.moc 
svn_switchwidget.o: svn_switchwidget.moc 
subversion_part.lo: subversion_part.moc 
$(srcdir)/commitdlg.cpp: commitdlgbase.h svnssltrustpromptbase.h 
svn_copywidget.o: svn_copywidget.moc 
svn_logviewwidget.o: svn_logviewwidget.moc 

#>+ 150
svn_copydlgwidget.cpp: $(srcdir)/svn_copydlgwidget.ui svn_copydlgwidget.h svn_copydlgwidget.moc
	rm -f svn_copydlgwidget.cpp
	echo '#include <kdialog.h>' > svn_copydlgwidget.cpp
	echo '#include <klocale.h>' >> svn_copydlgwidget.cpp
	$(UIC) -tr ${UIC_TR} -i svn_copydlgwidget.h $(srcdir)/svn_copydlgwidget.ui > svn_copydlgwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" svn_copydlgwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_svn_copydlgwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> svn_copydlgwidget.cpp ;\
	rm -f svn_copydlgwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "svn_copydlgwidget.moc"' >> svn_copydlgwidget.cpp; else rm -f svn_copydlgwidget.cpp ; exit $$ret ; fi

svn_copydlgwidget.h: $(srcdir)/svn_copydlgwidget.ui
	rm -rf svn_copydlgwidget.h;
	$(UIC) $(srcdir)/svn_copydlgwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> svn_copydlgwidget.h ;
svn_copydlgwidget.moc: svn_copydlgwidget.h
	$(MOC) svn_copydlgwidget.h -o svn_copydlgwidget.moc

subversiondiff.cpp: $(srcdir)/subversiondiff.ui subversiondiff.h subversiondiff.moc
	rm -f subversiondiff.cpp
	echo '#include <kdialog.h>' > subversiondiff.cpp
	echo '#include <klocale.h>' >> subversiondiff.cpp
	$(UIC) -tr ${UIC_TR} -i subversiondiff.h $(srcdir)/subversiondiff.ui > subversiondiff.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" subversiondiff.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_subversiondiff,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> subversiondiff.cpp ;\
	rm -f subversiondiff.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "subversiondiff.moc"' >> subversiondiff.cpp; else rm -f subversiondiff.cpp ; exit $$ret ; fi

subversiondiff.h: $(srcdir)/subversiondiff.ui
	rm -rf subversiondiff.h;
	$(UIC) $(srcdir)/subversiondiff.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> subversiondiff.h ;
subversiondiff.moc: subversiondiff.h
	$(MOC) subversiondiff.h -o subversiondiff.moc

svn_commitdlgbase.cpp: $(srcdir)/svn_commitdlgbase.ui svn_commitdlgbase.h svn_commitdlgbase.moc
	rm -f svn_commitdlgbase.cpp
	echo '#include <kdialog.h>' > svn_commitdlgbase.cpp
	echo '#include <klocale.h>' >> svn_commitdlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i svn_commitdlgbase.h $(srcdir)/svn_commitdlgbase.ui > svn_commitdlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" svn_commitdlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_svn_commitdlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> svn_commitdlgbase.cpp ;\
	rm -f svn_commitdlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "svn_commitdlgbase.moc"' >> svn_commitdlgbase.cpp; else rm -f svn_commitdlgbase.cpp ; exit $$ret ; fi

svn_commitdlgbase.h: $(srcdir)/svn_commitdlgbase.ui
	rm -rf svn_commitdlgbase.h;
	$(UIC) $(srcdir)/svn_commitdlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> svn_commitdlgbase.h ;
svn_commitdlgbase.moc: svn_commitdlgbase.h
	$(MOC) svn_commitdlgbase.h -o svn_commitdlgbase.moc

svn_mergeoptiondlgbase.cpp: $(srcdir)/svn_mergeoptiondlgbase.ui svn_mergeoptiondlgbase.h svn_mergeoptiondlgbase.moc
	rm -f svn_mergeoptiondlgbase.cpp
	echo '#include <kdialog.h>' > svn_mergeoptiondlgbase.cpp
	echo '#include <klocale.h>' >> svn_mergeoptiondlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i svn_mergeoptiondlgbase.h $(srcdir)/svn_mergeoptiondlgbase.ui > svn_mergeoptiondlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" svn_mergeoptiondlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_svn_mergeoptiondlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> svn_mergeoptiondlgbase.cpp ;\
	rm -f svn_mergeoptiondlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "svn_mergeoptiondlgbase.moc"' >> svn_mergeoptiondlgbase.cpp; else rm -f svn_mergeoptiondlgbase.cpp ; exit $$ret ; fi

svn_mergeoptiondlgbase.h: $(srcdir)/svn_mergeoptiondlgbase.ui
	rm -rf svn_mergeoptiondlgbase.h;
	$(UIC) $(srcdir)/svn_mergeoptiondlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> svn_mergeoptiondlgbase.h ;
svn_mergeoptiondlgbase.moc: svn_mergeoptiondlgbase.h
	$(MOC) svn_mergeoptiondlgbase.h -o svn_mergeoptiondlgbase.moc

subversionprojectwidget.cpp: $(srcdir)/subversionprojectwidget.ui subversionprojectwidget.h subversionprojectwidget.moc
	rm -f subversionprojectwidget.cpp
	echo '#include <kdialog.h>' > subversionprojectwidget.cpp
	echo '#include <klocale.h>' >> subversionprojectwidget.cpp
	$(UIC) -tr ${UIC_TR} -i subversionprojectwidget.h $(srcdir)/subversionprojectwidget.ui > subversionprojectwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" subversionprojectwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_subversionprojectwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> subversionprojectwidget.cpp ;\
	rm -f subversionprojectwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "subversionprojectwidget.moc"' >> subversionprojectwidget.cpp; else rm -f subversionprojectwidget.cpp ; exit $$ret ; fi

subversionprojectwidget.h: $(srcdir)/subversionprojectwidget.ui
	rm -rf subversionprojectwidget.h;
	$(UIC) $(srcdir)/subversionprojectwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> subversionprojectwidget.h ;
subversionprojectwidget.moc: subversionprojectwidget.h
	$(MOC) subversionprojectwidget.h -o subversionprojectwidget.moc

svn_logviewoptiondlgbase.cpp: $(srcdir)/svn_logviewoptiondlgbase.ui svn_logviewoptiondlgbase.h svn_logviewoptiondlgbase.moc
	rm -f svn_logviewoptiondlgbase.cpp
	echo '#include <kdialog.h>' > svn_logviewoptiondlgbase.cpp
	echo '#include <klocale.h>' >> svn_logviewoptiondlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i svn_logviewoptiondlgbase.h $(srcdir)/svn_logviewoptiondlgbase.ui > svn_logviewoptiondlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" svn_logviewoptiondlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_svn_logviewoptiondlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> svn_logviewoptiondlgbase.cpp ;\
	rm -f svn_logviewoptiondlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "svn_logviewoptiondlgbase.moc"' >> svn_logviewoptiondlgbase.cpp; else rm -f svn_logviewoptiondlgbase.cpp ; exit $$ret ; fi

svn_logviewoptiondlgbase.h: $(srcdir)/svn_logviewoptiondlgbase.ui
	rm -rf svn_logviewoptiondlgbase.h;
	$(UIC) $(srcdir)/svn_logviewoptiondlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> svn_logviewoptiondlgbase.h ;
svn_logviewoptiondlgbase.moc: svn_logviewoptiondlgbase.h
	$(MOC) svn_logviewoptiondlgbase.h -o svn_logviewoptiondlgbase.moc

svn_switchdlgbase.cpp: $(srcdir)/svn_switchdlgbase.ui svn_switchdlgbase.h svn_switchdlgbase.moc
	rm -f svn_switchdlgbase.cpp
	echo '#include <kdialog.h>' > svn_switchdlgbase.cpp
	echo '#include <klocale.h>' >> svn_switchdlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i svn_switchdlgbase.h $(srcdir)/svn_switchdlgbase.ui > svn_switchdlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" svn_switchdlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_svn_switchdlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> svn_switchdlgbase.cpp ;\
	rm -f svn_switchdlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "svn_switchdlgbase.moc"' >> svn_switchdlgbase.cpp; else rm -f svn_switchdlgbase.cpp ; exit $$ret ; fi

svn_switchdlgbase.h: $(srcdir)/svn_switchdlgbase.ui
	rm -rf svn_switchdlgbase.h;
	$(UIC) $(srcdir)/svn_switchdlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> svn_switchdlgbase.h ;
svn_switchdlgbase.moc: svn_switchdlgbase.h
	$(MOC) svn_switchdlgbase.h -o svn_switchdlgbase.moc

svnssltrustpromptbase.cpp: $(srcdir)/svnssltrustpromptbase.ui svnssltrustpromptbase.h svnssltrustpromptbase.moc
	rm -f svnssltrustpromptbase.cpp
	echo '#include <kdialog.h>' > svnssltrustpromptbase.cpp
	echo '#include <klocale.h>' >> svnssltrustpromptbase.cpp
	$(UIC) -tr ${UIC_TR} -i svnssltrustpromptbase.h $(srcdir)/svnssltrustpromptbase.ui > svnssltrustpromptbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" svnssltrustpromptbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_svnssltrustpromptbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> svnssltrustpromptbase.cpp ;\
	rm -f svnssltrustpromptbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "svnssltrustpromptbase.moc"' >> svnssltrustpromptbase.cpp; else rm -f svnssltrustpromptbase.cpp ; exit $$ret ; fi

svnssltrustpromptbase.h: $(srcdir)/svnssltrustpromptbase.ui
	rm -rf svnssltrustpromptbase.h;
	$(UIC) $(srcdir)/svnssltrustpromptbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> svnssltrustpromptbase.h ;
svnssltrustpromptbase.moc: svnssltrustpromptbase.h
	$(MOC) svnssltrustpromptbase.h -o svnssltrustpromptbase.moc

svn_co.cpp: $(srcdir)/svn_co.ui svn_co.h svn_co.moc
	rm -f svn_co.cpp
	echo '#include <kdialog.h>' > svn_co.cpp
	echo '#include <klocale.h>' >> svn_co.cpp
	$(UIC) -tr ${UIC_TR} -i svn_co.h $(srcdir)/svn_co.ui > svn_co.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" svn_co.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_svn_co,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> svn_co.cpp ;\
	rm -f svn_co.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "svn_co.moc"' >> svn_co.cpp; else rm -f svn_co.cpp ; exit $$ret ; fi

svn_co.h: $(srcdir)/svn_co.ui
	rm -rf svn_co.h;
	$(UIC) $(srcdir)/svn_co.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> svn_co.h ;
svn_co.moc: svn_co.h
	$(MOC) svn_co.h -o svn_co.moc

commitdlgbase.cpp: $(srcdir)/commitdlgbase.ui commitdlgbase.h commitdlgbase.moc
	rm -f commitdlgbase.cpp
	echo '#include <kdialog.h>' > commitdlgbase.cpp
	echo '#include <klocale.h>' >> commitdlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i commitdlgbase.h $(srcdir)/commitdlgbase.ui > commitdlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" commitdlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_commitdlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> commitdlgbase.cpp ;\
	rm -f commitdlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "commitdlgbase.moc"' >> commitdlgbase.cpp; else rm -f commitdlgbase.cpp ; exit $$ret ; fi

commitdlgbase.h: $(srcdir)/commitdlgbase.ui
	rm -rf commitdlgbase.h;
	$(UIC) $(srcdir)/commitdlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> commitdlgbase.h ;
commitdlgbase.moc: commitdlgbase.h
	$(MOC) commitdlgbase.h -o commitdlgbase.moc
