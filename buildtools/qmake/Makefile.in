# Makefile.in generated by automake 1.11.6 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Here resides the troll project part for tmake or qmake



VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = buildtools/qmake
DIST_COMMON = README $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(kde_moduledir)" "$(DESTDIR)$(rcdir)" \
	"$(DESTDIR)$(servicedir)"
LTLIBRARIES = $(kde_module_LTLIBRARIES)
libkdevtrollproject_la_DEPENDENCIES =  \
	$(top_builddir)/lib/libkdevelop.la \
	$(top_builddir)/lib/util/libkdevutil.la \
	$(top_builddir)/buildtools/lib/widgets/libkdevbuildtoolswidgets.la \
	$(top_builddir)/buildtools/lib/base/libkdevbuildbase.la \
	$(top_builddir)/buildtools/lib/parsers/qmake/libkdevqmakeparser.la
am_libkdevtrollproject_la_OBJECTS = choosesubprojectdlg.lo \
	createscopedlg.lo disablesubprojectdlg.lo newwidgetdlg.lo \
	projectconfigurationdlg.lo qmakedefaultopts.lo \
	qmakeoptionswidget.lo qmakescopeitem.lo scope.lo \
	trolllistview.lo trollprojectpart.lo trollprojectwidget.lo
#>- libkdevtrollproject_la_OBJECTS = $(am_libkdevtrollproject_la_OBJECTS)
#>+ 8
libkdevtrollproject_la_final_OBJECTS = libkdevtrollproject_la.all_cpp.lo 
libkdevtrollproject_la_nofinal_OBJECTS = choosesubprojectdlg.lo \
	createscopedlg.lo disablesubprojectdlg.lo newwidgetdlg.lo \
	projectconfigurationdlg.lo qmakedefaultopts.lo \
	qmakeoptionswidget.lo qmakescopeitem.lo scope.lo \
	trolllistview.lo trollprojectpart.lo trollprojectwidget.lo choosesubprojectdlgbase.lo createscopedlgbase.lo disablesubprojectdlgbase.lo newwidgetdlgbase.lo projectconfigurationdlgbase.lo qmakeoptionswidgetbase.lo
@KDE_USE_FINAL_FALSE@libkdevtrollproject_la_OBJECTS = $(libkdevtrollproject_la_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@libkdevtrollproject_la_OBJECTS = $(libkdevtrollproject_la_final_OBJECTS)
#>- libkdevtrollproject_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
#>- 	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(libkdevtrollproject_la_LDFLAGS) $(LDFLAGS) -o $@
#>+ 3
libkdevtrollproject_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(libkdevtrollproject_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
#>- 	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
#>- 	$(LDFLAGS) -o $@
#>+ 3
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libkdevtrollproject_la_SOURCES)
DIST_SOURCES = $(libkdevtrollproject_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(rc_DATA) $(service_DATA)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DB3INCLUDES = @DB3INCLUDES@
DB3LDFLAGS = @DB3LDFLAGS@
DB3LIB = @DB3LIB@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOT_FOUND = @DOT_FOUND@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
GZIP_COMMAND = @GZIP_COMMAND@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SVN_CPPFLAGS = @SVN_CPPFLAGS@
SVN_INCLUDE = @SVN_INCLUDE@
SVN_LIB = @SVN_LIB@
TAR = @TAR@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
gmake_prog = @gmake_prog@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
kdelibs_doxydir = @kdelibs_doxydir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
tar = @tar@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
INCLUDES = -I$(top_srcdir)/buildtools/lib/base \
	-I$(top_srcdir)/buildtools/lib/widgets -I$(top_srcdir)/lib/interfaces \
	-I$(top_srcdir)/buildtools/lib/parsers/qmake \
	-I$(top_srcdir)/lib/interfaces/extensions -I$(top_srcdir)/lib/interfaces/external -I$(top_srcdir)/lib/util \
	-I$(top_builddir)/buildtools/lib/widgets $(all_includes)

kde_module_LTLIBRARIES = libkdevtrollproject.la
libkdevtrollproject_la_LDFLAGS = $(all_libraries) $(KDE_PLUGIN)
libkdevtrollproject_la_LIBADD = $(top_builddir)/lib/libkdevelop.la \
	$(top_builddir)/lib/util/libkdevutil.la $(top_builddir)/buildtools/lib/widgets/libkdevbuildtoolswidgets.la \
	$(top_builddir)/buildtools/lib/base/libkdevbuildbase.la \
	$(top_builddir)/buildtools/lib/parsers/qmake/libkdevqmakeparser.la

#>- libkdevtrollproject_la_SOURCES = choosesubprojectdlg.cpp \
#>- 	choosesubprojectdlgbase.ui createscopedlg.cpp createscopedlgbase.ui disablesubprojectdlg.cpp \
#>- 	disablesubprojectdlgbase.ui newwidgetdlg.cpp newwidgetdlgbase.ui \
#>- 	projectconfigurationdlg.cpp projectconfigurationdlgbase.ui qmakedefaultopts.cpp \
#>- 	qmakeoptionswidget.cpp qmakeoptionswidgetbase.ui qmakescopeitem.cpp scope.cpp \
#>- 	trolllistview.cpp trollprojectpart.cpp trollprojectwidget.cpp
#>+ 6
libkdevtrollproject_la_SOURCES=choosesubprojectdlg.cpp \
	 createscopedlg.cpp  disablesubprojectdlg.cpp \
	 newwidgetdlg.cpp  \
	projectconfigurationdlg.cpp  qmakedefaultopts.cpp \
	qmakeoptionswidget.cpp  qmakescopeitem.cpp scope.cpp \
	trolllistview.cpp trollprojectpart.cpp trollprojectwidget.cpp choosesubprojectdlgbase.cpp createscopedlgbase.cpp disablesubprojectdlgbase.cpp newwidgetdlgbase.cpp projectconfigurationdlgbase.cpp qmakeoptionswidgetbase.cpp

#>- METASOURCES = AUTO
servicedir = $(kde_servicesdir)
service_DATA = kdevtrollproject.desktop kdevtmakeproject.desktop
rcdir = $(kde_datadir)/kdevtrollproject
rc_DATA = kdevtrollproject.rc
noinst_HEADERS = createscopedlg.h disablesubprojectdlg.h qmakedefaultopts.h \
	qmakeoptionswidget.h qmakescopeitem.h trolllistview.h

#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
#>- 	        && { if test -f $@; then exit 0; else break; fi; }; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu buildtools/qmake/Makefile'; \
#>- 	$(am__cd) $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu buildtools/qmake/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu buildtools/qmake/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu buildtools/qmake/Makefile
	cd $(top_srcdir) && perl admin/am_edit buildtools/qmake/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-kde_moduleLTLIBRARIES: $(kde_module_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(kde_module_LTLIBRARIES)'; test -n "$(kde_moduledir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(kde_moduledir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(kde_moduledir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(kde_moduledir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(kde_moduledir)"; \
	}

uninstall-kde_moduleLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(kde_module_LTLIBRARIES)'; test -n "$(kde_moduledir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(kde_moduledir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(kde_moduledir)/$$f"; \
	done

clean-kde_moduleLTLIBRARIES:
	-test -z "$(kde_module_LTLIBRARIES)" || rm -f $(kde_module_LTLIBRARIES)
	@list='$(kde_module_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libkdevtrollproject.la: $(libkdevtrollproject_la_OBJECTS) $(libkdevtrollproject_la_DEPENDENCIES) $(EXTRA_libkdevtrollproject_la_DEPENDENCIES) 
	$(libkdevtrollproject_la_LINK) -rpath $(kde_moduledir) $(libkdevtrollproject_la_OBJECTS) $(libkdevtrollproject_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/choosesubprojectdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/createscopedlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/disablesubprojectdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/newwidgetdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/projectconfigurationdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmakedefaultopts.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmakeoptionswidget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qmakescopeitem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scope.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trolllistview.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trollprojectpart.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trollprojectwidget.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-rcDATA: $(rc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(rc_DATA)'; test -n "$(rcdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(rcdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(rcdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(rcdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(rcdir)" || exit $$?; \
	done

uninstall-rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(rc_DATA)'; test -n "$(rcdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(rcdir)'; $(am__uninstall_files_from_dir)
install-serviceDATA: $(service_DATA)
	@$(NORMAL_INSTALL)
	@list='$(service_DATA)'; test -n "$(servicedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(servicedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(servicedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(servicedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(servicedir)" || exit $$?; \
	done

uninstall-serviceDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(service_DATA)'; test -n "$(servicedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(servicedir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(kde_moduledir)" "$(DESTDIR)$(rcdir)" "$(DESTDIR)$(servicedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-generic clean-kde_moduleLTLIBRARIES clean-libtool \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-generic clean-kde_moduleLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

#>- install-data-am: install-kde_moduleLTLIBRARIES install-rcDATA \
#>- 	install-serviceDATA
#>+ 2
install-data-am:   install-rcDATA \
	install-serviceDATA

install-dvi: install-dvi-am

install-dvi-am:

#>- install-exec-am:
#>+ 1
install-exec-am:  install-kde_moduleLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-kde_moduleLTLIBRARIES uninstall-rcDATA \
	uninstall-serviceDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-kde_moduleLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-kde_moduleLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-rcDATA \
	install-serviceDATA install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-kde_moduleLTLIBRARIES uninstall-rcDATA \
	uninstall-serviceDATA


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
disablesubprojectdlg.moc: $(srcdir)/disablesubprojectdlg.h
	$(MOC) $(srcdir)/disablesubprojectdlg.h -o disablesubprojectdlg.moc

#>+ 2
mocs: disablesubprojectdlg.moc

#>+ 3
createscopedlg.moc: $(srcdir)/createscopedlg.h
	$(MOC) $(srcdir)/createscopedlg.h -o createscopedlg.moc

#>+ 2
mocs: createscopedlg.moc

#>+ 3
trollprojectpart.moc: $(srcdir)/trollprojectpart.h
	$(MOC) $(srcdir)/trollprojectpart.h -o trollprojectpart.moc

#>+ 2
mocs: trollprojectpart.moc

#>+ 3
trollprojectwidget.moc: $(srcdir)/trollprojectwidget.h
	$(MOC) $(srcdir)/trollprojectwidget.h -o trollprojectwidget.moc

#>+ 2
mocs: trollprojectwidget.moc

#>+ 3
choosesubprojectdlg.moc: $(srcdir)/choosesubprojectdlg.h
	$(MOC) $(srcdir)/choosesubprojectdlg.h -o choosesubprojectdlg.moc

#>+ 2
mocs: choosesubprojectdlg.moc

#>+ 3
trolllistview.moc: $(srcdir)/trolllistview.h
	$(MOC) $(srcdir)/trolllistview.h -o trolllistview.moc

#>+ 2
mocs: trolllistview.moc

#>+ 3
qmakeoptionswidget.moc: $(srcdir)/qmakeoptionswidget.h
	$(MOC) $(srcdir)/qmakeoptionswidget.h -o qmakeoptionswidget.moc

#>+ 2
mocs: qmakeoptionswidget.moc

#>+ 3
clean-metasources:
	-rm -f  disablesubprojectdlg.moc createscopedlg.moc trollprojectpart.moc trollprojectwidget.moc choosesubprojectdlg.moc trolllistview.moc qmakeoptionswidget.moc

#>+ 2
KDE_DIST=trollprojectwidget.h choosesubprojectdlg.h disablesubprojectdlgbase.ui projectconfigurationdlgbase.ui kdevtmakeproject.desktop createscopedlgbase.ui choosesubprojectdlgbase.ui README.dox kdevtrollproject.desktop qmakeoptionswidgetbase.ui scope.h Makefile.in newwidgetdlgbase.ui kdevtrollproject.rc projectconfigurationdlg.h newwidgetdlg.h trollprojectpart.h Makefile.am 

#>+ 9
clean-ui:
	-rm -f \
	choosesubprojectdlgbase.cpp choosesubprojectdlgbase.h choosesubprojectdlgbase.moc \
	createscopedlgbase.cpp createscopedlgbase.h createscopedlgbase.moc \
	disablesubprojectdlgbase.cpp disablesubprojectdlgbase.h disablesubprojectdlgbase.moc \
	newwidgetdlgbase.cpp newwidgetdlgbase.h newwidgetdlgbase.moc \
	projectconfigurationdlgbase.cpp projectconfigurationdlgbase.h projectconfigurationdlgbase.moc \
	qmakeoptionswidgetbase.cpp qmakeoptionswidgetbase.h qmakeoptionswidgetbase.moc 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu buildtools/qmake/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu buildtools/qmake/Makefile
	cd $(top_srcdir) && perl admin/am_edit buildtools/qmake/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
libkdevtrollproject_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/choosesubprojectdlg.cpp $(srcdir)/createscopedlg.cpp $(srcdir)/disablesubprojectdlg.cpp $(srcdir)/newwidgetdlg.cpp $(srcdir)/projectconfigurationdlg.cpp $(srcdir)/qmakedefaultopts.cpp $(srcdir)/qmakeoptionswidget.cpp $(srcdir)/qmakescopeitem.cpp $(srcdir)/scope.cpp $(srcdir)/trolllistview.cpp $(srcdir)/trollprojectpart.cpp $(srcdir)/trollprojectwidget.cpp choosesubprojectdlgbase.cpp createscopedlgbase.cpp disablesubprojectdlgbase.cpp newwidgetdlgbase.cpp projectconfigurationdlgbase.cpp qmakeoptionswidgetbase.cpp  trollprojectpart.moc trollprojectwidget.moc choosesubprojectdlg.moc projectconfigurationdlgbase.moc choosesubprojectdlgbase.moc qmakeoptionswidgetbase.moc newwidgetdlgbase.moc qmakeoptionswidget.moc disablesubprojectdlg.moc createscopedlg.moc trolllistview.moc createscopedlgbase.moc disablesubprojectdlgbase.moc
	@echo 'creating libkdevtrollproject_la.all_cpp.cpp ...'; \
	rm -f libkdevtrollproject_la.all_cpp.files libkdevtrollproject_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libkdevtrollproject_la.all_cpp.final; \
	for file in choosesubprojectdlg.cpp createscopedlg.cpp disablesubprojectdlg.cpp newwidgetdlg.cpp projectconfigurationdlg.cpp qmakedefaultopts.cpp qmakeoptionswidget.cpp qmakescopeitem.cpp scope.cpp trolllistview.cpp trollprojectpart.cpp trollprojectwidget.cpp choosesubprojectdlgbase.cpp createscopedlgbase.cpp disablesubprojectdlgbase.cpp newwidgetdlgbase.cpp projectconfigurationdlgbase.cpp qmakeoptionswidgetbase.cpp ; do \
	  echo "#include \"$$file\"" >> libkdevtrollproject_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libkdevtrollproject_la.all_cpp.final; \
	done; \
	cat libkdevtrollproject_la.all_cpp.final libkdevtrollproject_la.all_cpp.files > libkdevtrollproject_la.all_cpp.cpp; \
	rm -f libkdevtrollproject_la.all_cpp.final libkdevtrollproject_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f libkdevtrollproject_la.all_cpp.cpp

#>+ 3
final:
	$(MAKE) libkdevtrollproject_la_OBJECTS="$(libkdevtrollproject_la_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) libkdevtrollproject_la_OBJECTS="$(libkdevtrollproject_la_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) libkdevtrollproject_la_OBJECTS="$(libkdevtrollproject_la_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) libkdevtrollproject_la_OBJECTS="$(libkdevtrollproject_la_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 29
createscopedlg.lo: createscopedlg.moc 
trollprojectpart.o: trollprojectpart.moc 
trollprojectpart.lo: trollprojectpart.moc 
$(srcdir)/trolllistview.cpp: choosesubprojectdlgbase.h createscopedlgbase.h disablesubprojectdlgbase.h newwidgetdlgbase.h projectconfigurationdlgbase.h qmakeoptionswidgetbase.h 
$(srcdir)/disablesubprojectdlg.cpp: choosesubprojectdlgbase.h createscopedlgbase.h disablesubprojectdlgbase.h newwidgetdlgbase.h projectconfigurationdlgbase.h qmakeoptionswidgetbase.h 
$(srcdir)/scope.cpp: choosesubprojectdlgbase.h createscopedlgbase.h disablesubprojectdlgbase.h newwidgetdlgbase.h projectconfigurationdlgbase.h qmakeoptionswidgetbase.h 
nmcheck-am: nmcheck
trolllistview.o: trolllistview.moc 
disablesubprojectdlg.lo: disablesubprojectdlg.moc 
qmakeoptionswidget.o: qmakeoptionswidget.moc 
$(srcdir)/qmakescopeitem.cpp: choosesubprojectdlgbase.h createscopedlgbase.h disablesubprojectdlgbase.h newwidgetdlgbase.h projectconfigurationdlgbase.h qmakeoptionswidgetbase.h 
$(srcdir)/trollprojectpart.cpp: choosesubprojectdlgbase.h createscopedlgbase.h disablesubprojectdlgbase.h newwidgetdlgbase.h projectconfigurationdlgbase.h qmakeoptionswidgetbase.h 
$(srcdir)/createscopedlg.cpp: choosesubprojectdlgbase.h createscopedlgbase.h disablesubprojectdlgbase.h newwidgetdlgbase.h projectconfigurationdlgbase.h qmakeoptionswidgetbase.h 
qmakeoptionswidget.lo: qmakeoptionswidget.moc 
choosesubprojectdlg.o: choosesubprojectdlg.moc 
trollprojectwidget.lo: trollprojectwidget.moc 
$(srcdir)/newwidgetdlg.cpp: choosesubprojectdlgbase.h createscopedlgbase.h disablesubprojectdlgbase.h newwidgetdlgbase.h projectconfigurationdlgbase.h qmakeoptionswidgetbase.h 
createscopedlg.o: createscopedlg.moc 
$(srcdir)/trollprojectwidget.cpp: choosesubprojectdlgbase.h createscopedlgbase.h disablesubprojectdlgbase.h newwidgetdlgbase.h projectconfigurationdlgbase.h qmakeoptionswidgetbase.h 
nmcheck: 
disablesubprojectdlg.o: disablesubprojectdlg.moc 
$(srcdir)/choosesubprojectdlg.cpp: choosesubprojectdlgbase.h createscopedlgbase.h disablesubprojectdlgbase.h newwidgetdlgbase.h projectconfigurationdlgbase.h qmakeoptionswidgetbase.h 
choosesubprojectdlg.lo: choosesubprojectdlg.moc 
trollprojectwidget.o: trollprojectwidget.moc 
$(srcdir)/qmakeoptionswidget.cpp: choosesubprojectdlgbase.h createscopedlgbase.h disablesubprojectdlgbase.h newwidgetdlgbase.h projectconfigurationdlgbase.h qmakeoptionswidgetbase.h 
trolllistview.lo: trolllistview.moc 
$(srcdir)/projectconfigurationdlg.cpp: choosesubprojectdlgbase.h createscopedlgbase.h disablesubprojectdlgbase.h newwidgetdlgbase.h projectconfigurationdlgbase.h qmakeoptionswidgetbase.h 
$(srcdir)/qmakedefaultopts.cpp: choosesubprojectdlgbase.h createscopedlgbase.h disablesubprojectdlgbase.h newwidgetdlgbase.h projectconfigurationdlgbase.h qmakeoptionswidgetbase.h 

#>+ 90
qmakeoptionswidgetbase.cpp: $(srcdir)/qmakeoptionswidgetbase.ui qmakeoptionswidgetbase.h qmakeoptionswidgetbase.moc
	rm -f qmakeoptionswidgetbase.cpp
	echo '#include <kdialog.h>' > qmakeoptionswidgetbase.cpp
	echo '#include <klocale.h>' >> qmakeoptionswidgetbase.cpp
	$(UIC) -tr ${UIC_TR} -i qmakeoptionswidgetbase.h $(srcdir)/qmakeoptionswidgetbase.ui > qmakeoptionswidgetbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" qmakeoptionswidgetbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_qmakeoptionswidgetbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> qmakeoptionswidgetbase.cpp ;\
	rm -f qmakeoptionswidgetbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "qmakeoptionswidgetbase.moc"' >> qmakeoptionswidgetbase.cpp; else rm -f qmakeoptionswidgetbase.cpp ; exit $$ret ; fi

qmakeoptionswidgetbase.h: $(srcdir)/qmakeoptionswidgetbase.ui
	rm -rf qmakeoptionswidgetbase.h;
	$(UIC) $(srcdir)/qmakeoptionswidgetbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> qmakeoptionswidgetbase.h ;
qmakeoptionswidgetbase.moc: qmakeoptionswidgetbase.h
	$(MOC) qmakeoptionswidgetbase.h -o qmakeoptionswidgetbase.moc

projectconfigurationdlgbase.cpp: $(srcdir)/projectconfigurationdlgbase.ui projectconfigurationdlgbase.h projectconfigurationdlgbase.moc
	rm -f projectconfigurationdlgbase.cpp
	echo '#include <kdialog.h>' > projectconfigurationdlgbase.cpp
	echo '#include <klocale.h>' >> projectconfigurationdlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i projectconfigurationdlgbase.h $(srcdir)/projectconfigurationdlgbase.ui > projectconfigurationdlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" projectconfigurationdlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_projectconfigurationdlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> projectconfigurationdlgbase.cpp ;\
	rm -f projectconfigurationdlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "projectconfigurationdlgbase.moc"' >> projectconfigurationdlgbase.cpp; else rm -f projectconfigurationdlgbase.cpp ; exit $$ret ; fi

projectconfigurationdlgbase.h: $(srcdir)/projectconfigurationdlgbase.ui
	rm -rf projectconfigurationdlgbase.h;
	$(UIC) $(srcdir)/projectconfigurationdlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> projectconfigurationdlgbase.h ;
projectconfigurationdlgbase.moc: projectconfigurationdlgbase.h
	$(MOC) projectconfigurationdlgbase.h -o projectconfigurationdlgbase.moc

newwidgetdlgbase.cpp: $(srcdir)/newwidgetdlgbase.ui newwidgetdlgbase.h newwidgetdlgbase.moc
	rm -f newwidgetdlgbase.cpp
	echo '#include <kdialog.h>' > newwidgetdlgbase.cpp
	echo '#include <klocale.h>' >> newwidgetdlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i newwidgetdlgbase.h $(srcdir)/newwidgetdlgbase.ui > newwidgetdlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" newwidgetdlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_newwidgetdlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> newwidgetdlgbase.cpp ;\
	rm -f newwidgetdlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "newwidgetdlgbase.moc"' >> newwidgetdlgbase.cpp; else rm -f newwidgetdlgbase.cpp ; exit $$ret ; fi

newwidgetdlgbase.h: $(srcdir)/newwidgetdlgbase.ui
	rm -rf newwidgetdlgbase.h;
	$(UIC) $(srcdir)/newwidgetdlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> newwidgetdlgbase.h ;
newwidgetdlgbase.moc: newwidgetdlgbase.h
	$(MOC) newwidgetdlgbase.h -o newwidgetdlgbase.moc

createscopedlgbase.cpp: $(srcdir)/createscopedlgbase.ui createscopedlgbase.h createscopedlgbase.moc
	rm -f createscopedlgbase.cpp
	echo '#include <kdialog.h>' > createscopedlgbase.cpp
	echo '#include <klocale.h>' >> createscopedlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i createscopedlgbase.h $(srcdir)/createscopedlgbase.ui > createscopedlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" createscopedlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_createscopedlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> createscopedlgbase.cpp ;\
	rm -f createscopedlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "createscopedlgbase.moc"' >> createscopedlgbase.cpp; else rm -f createscopedlgbase.cpp ; exit $$ret ; fi

createscopedlgbase.h: $(srcdir)/createscopedlgbase.ui
	rm -rf createscopedlgbase.h;
	$(UIC) $(srcdir)/createscopedlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> createscopedlgbase.h ;
createscopedlgbase.moc: createscopedlgbase.h
	$(MOC) createscopedlgbase.h -o createscopedlgbase.moc

disablesubprojectdlgbase.cpp: $(srcdir)/disablesubprojectdlgbase.ui disablesubprojectdlgbase.h disablesubprojectdlgbase.moc
	rm -f disablesubprojectdlgbase.cpp
	echo '#include <kdialog.h>' > disablesubprojectdlgbase.cpp
	echo '#include <klocale.h>' >> disablesubprojectdlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i disablesubprojectdlgbase.h $(srcdir)/disablesubprojectdlgbase.ui > disablesubprojectdlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" disablesubprojectdlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_disablesubprojectdlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> disablesubprojectdlgbase.cpp ;\
	rm -f disablesubprojectdlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "disablesubprojectdlgbase.moc"' >> disablesubprojectdlgbase.cpp; else rm -f disablesubprojectdlgbase.cpp ; exit $$ret ; fi

disablesubprojectdlgbase.h: $(srcdir)/disablesubprojectdlgbase.ui
	rm -rf disablesubprojectdlgbase.h;
	$(UIC) $(srcdir)/disablesubprojectdlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> disablesubprojectdlgbase.h ;
disablesubprojectdlgbase.moc: disablesubprojectdlgbase.h
	$(MOC) disablesubprojectdlgbase.h -o disablesubprojectdlgbase.moc

choosesubprojectdlgbase.cpp: $(srcdir)/choosesubprojectdlgbase.ui choosesubprojectdlgbase.h choosesubprojectdlgbase.moc
	rm -f choosesubprojectdlgbase.cpp
	echo '#include <kdialog.h>' > choosesubprojectdlgbase.cpp
	echo '#include <klocale.h>' >> choosesubprojectdlgbase.cpp
	$(UIC) -tr ${UIC_TR} -i choosesubprojectdlgbase.h $(srcdir)/choosesubprojectdlgbase.ui > choosesubprojectdlgbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" choosesubprojectdlgbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_choosesubprojectdlgbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> choosesubprojectdlgbase.cpp ;\
	rm -f choosesubprojectdlgbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "choosesubprojectdlgbase.moc"' >> choosesubprojectdlgbase.cpp; else rm -f choosesubprojectdlgbase.cpp ; exit $$ret ; fi

choosesubprojectdlgbase.h: $(srcdir)/choosesubprojectdlgbase.ui
	rm -rf choosesubprojectdlgbase.h;
	$(UIC) $(srcdir)/choosesubprojectdlgbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> choosesubprojectdlgbase.h ;
choosesubprojectdlgbase.moc: choosesubprojectdlgbase.h
	$(MOC) choosesubprojectdlgbase.h -o choosesubprojectdlgbase.moc
